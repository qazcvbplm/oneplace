<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ops.dao.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.ops.entity.Orders">
        <id column="Id" jdbcType="VARCHAR" property="id"/>
        <result column="userId" jdbcType="VARCHAR" property="userid"/>
        <result column="shopId" jdbcType="VARCHAR" property="shopid"/>
        <result column="totalPrice" jdbcType="DECIMAL" property="totalprice"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="couponPrice" jdbcType="DECIMAL" property="couponprice"/>
        <result column="couponId" property="couponid"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="shopName" jdbcType="VARCHAR" property="shopName"/>
        <result column="addressName" jdbcType="VARCHAR" property="addressName"/>
        <result column="addressPhone" jdbcType="VARCHAR" property="addressPhone"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <collection property="op" javaType="ArrayList" ofType="com.ops.entity.OrderProduct">
            <result column="productName" jdbcType="VARCHAR" property="productname"/>
            <result column="productImage" jdbcType="VARCHAR" property="productimage"/>
            <result column="numbers" jdbcType="INTEGER" property="numbers"/>
            <result column="productId" jdbcType="INTEGER" property="productId"/>
            <result column="productPrice" jdbcType="DECIMAL" property="productprice"/>
            <result column="orderId" jdbcType="VARCHAR" property="orderid"/>
            <result column="totalPrice" jdbcType="DECIMAL" property="totalprice"/>
            <result column="productType" jdbcType="VARCHAR" property="producttype"/>
        </collection>
    </resultMap>
    <select id="find" parameterType="com.ops.entity.Orders" resultMap="BaseResultMap">
        select
        <if test="mqo.total!=null">
            count(*) as isDelete
        </if>
        <if test="mqo.total==null">
            orders.*,shop.name as shopName,order_product.*
        </if>
        from orders,shop,order_product
        <where>
            <if test="type=='基地订单'">
                and orders.shopId=shop.id
            </if>
            and order_product.orderId=orders.Id
            <if test="id!=null">
                and Id=#{Id}
            </if>
            <if test="status!=null">
                and status=#{status}
            </if>
            <if test="userid!=null">
                and orders.userId=#{userid}
            </if>
            <if test="shopid!=null">
                and shopId=#{shopid}
            </if>
            <if test="type!=null">
                and orders.type=#{type}
            </if>
        </where>
        order by createtime desc
        <if test="mqo.page!=null and mqo.size!=null">
            limit #{mqo.page},#{mqo.size}
        </if>
    </select>
    <update id="updateStatus" parameterType="map">
     update orders set status=#{status} where Id=#{id} and status=#{statusold}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    *
    from orders
    where Id = #{id,jdbcType=VARCHAR}
  </select>
    <insert id="insert" parameterType="com.ops.entity.Orders">
    insert into orders (Id, userId, shopId, 
      totalPrice, status, type, 
      couponPrice, couponId,remark,addressName,addressPhone,address)
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{shopid,jdbcType=VARCHAR}, 
      #{totalprice,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{couponprice,jdbcType=DECIMAL}, #{couponid},#{remark},#{addressName},#{addressPhone},#{address})
  </insert>


</mapper>